import{c as e,a as t,D as r}from"./DataSyncService-BnTv72BN.js";class a{constructor(e){this.dataSyncService=e}get(e){this.dataSyncService.get(e)}create(e){return this.dataSyncService.create(e.id,e)}update(e,t){return this.dataSyncService.update(e,t)}delete(e){return this.dataSyncService.delete(e)}async getMetricServerId(t){return await e.sendMessage({handler:"getSid",args:[t]})}}class s{constructor(e){this.dataSyncService=e}get(e){this.dataSyncService.get(e)}refresh(e){return this.dataSyncService.refresh(e)}create(e){return this.dataSyncService.create(e.id,e)}update(e,t){return this.dataSyncService.update(e,t)}delete(e){return this.dataSyncService.delete(e)}async getMetricServerId(t){return await e.sendMessage({handler:"getSid",args:[t]})}async getMetricUrlValues(e){return await t.post("metrics/preview",{url:e})}}class c{constructor(e){this.dataSyncService=e}get(e){this.dataSyncService.get(e)}create(e){return this.dataSyncService.create(e.id,e)}update(e,t){return this.dataSyncService.update(e,t)}delete(e){return this.dataSyncService.delete(e)}async getMetricServerId(t){return await e.sendMessage({handler:"getSid",args:[t]})}}class i{async getProviders(){return await t.get("settings/metrics")}async connectProvider(e){return await t.put("settings/metrics/providers/",{provider_id:e})}async getProviderDataPoints(e){return await t.get(`settings/metrics/providers/${e}/dataPoints`)}}const n=()=>({clocksService:new a(new r("clocks")),countdownsService:new c(new r("countdowns")),metricsService:new s(new r("metrics",{queryParams:{get:{round:"false"}}})),metricsProvidersService:new i}),d=255,o=1e3,S={NameEmpty:"Please enter a name",NameTooLong:"Name must be 255 characters or less",ValueEmpty:"Please enter a value",UrlEmpty:"Please enter a URL",UrlTooLong:"URL must be 255 characters or less",UrlInvalid:"Please enter a valid URL",ProviderEmpty:"Please choose a provider",ProviderValueInvalid:"Please choose a valid provider value",TimezoneEmpty:"Please enter a timezone",PulseOnly:""};export{S as E,d as M,o as a,n as p};