import{a as e,e as t,g as a}from"./DataSyncService-BnTv72BN.js";import{L as s,a2 as r,a as o,A as i}from"./index-DY0DW88M.js";import{i as n,a as u,h as c}from"./auth-HiWjNVol.js";import{l}from"./legacyUserMigration-eNETLKah.js";import{persistent as g}from"./reactiveCustomization-B8WwDagp.js";function d(e){if(!e)throw new s(r.PASSWORD_EMPTY);if(!n(e))throw new s(r.PASSWORD_INVALID)}const w=new class{async generateOneTimePassword(){const{data:t}=await e.post("login/onetime",{medium:"account"});return t.email||(t.uuid=o.getUserUuid()??""),t}async onSuccessfulUserLogin(){localStorage.setItem("loggedIn",String(Date.now())),localStorage.removeItem("onetimeSent"),localStorage.removeItem("doLoginOnNextLoad"),t.sendCrossTabMessage("reload"),await new Promise((e=>{m.trigger("user:successfulLogin",(async()=>{var t;await i.identify(),m.widgetManager.populateWidgets(),m.models.themeManager.initializeThemes(),m.cmd("user.cleanup",{type:"notifications"}),m.conditionalFeatures.featureEnabled("team")&&(null==(t=document.getElementsByTagName("body")[0])||t.classList.add("has-team")),e()}))}))}async onSuccessfulAuthResponse(e,t){const a=o.getUserUuid()!==e.user_uuid,s=!!(null==t?void 0:t.keepPreviousUserData);a&&!s&&(o.clearLocalStorage(),await o.clearIndexedDb(),m.trigger("focusMode:stop"),m.models.customization.clear()),await c(e),e.email&&localStorage.setItem("email",e.email),e.features&&m.conditionalFeatures.updateFeatures(e.features),(null==t?void 0:t.migrateLegacy)&&await l.migrateAll()}async login(t,o){try{d(o);const{data:a}=await e.post("user/authenticate",{username:t,password:o});await this.onSuccessfulAuthResponse({...a,email:t},{keepPreviousUserData:!1,migrateLegacy:!1})}catch(i){if(i instanceof s)throw i;throw a(i,{401:r.PASSWORD_INCORRECT})}}async register(t,r,i,n){try{d(i);const{data:{token:a,token_uuid:s,settings:{features:u,user_id:c}}}=await e.post("user/register",{name:t,email:r,password:i,newsletterOptIn:n.newsletterOptIn});await this.onSuccessfulAuthResponse({token:a,token_uuid:s,user_uuid:c,features:u,email:r},{keepPreviousUserData:o.userIsLegacyUnregistered(),migrateLegacy:o.userIsLegacyUnregistered()})}catch(u){if(u instanceof s)throw u;throw a(u)}}async stayUnregistered(t){try{if(localStorage.getItem("unregistered"))return;const{data:{token:a,token_uuid:s,settings:{features:r,user_id:o}}}=await e.post("user/register?canceled=true",{name:t});await this.onSuccessfulAuthResponse({token:a,token_uuid:s,user_uuid:o,features:r},{keepPreviousUserData:!0,migrateLegacy:!1}),g.displayname=t,localStorage.setItem("unregistered","true")}catch(s){throw console.log(s),a(s)}}async checkEmail(t){try{!function(e){if(!e)throw new s(r.EMAIL_EMPTY);if(!u(e))throw new s(r.EMAIL_INVALID.replace("{email}",e))}(t);const{data:a}=await e.post("/user:preregister",{email:t});if(a.partnerIdMismatch)throw new s(r.PARTNER_ID_MISMATCH_ERROR_MESSAGE);return a}catch(o){if(o instanceof s)throw o;throw a(o)}}async resetPassword(t,r,o){try{d(o),await e.post("user/forgot",{name:t,email:r,password:o})}catch(i){if(i instanceof s)throw i;throw a(i)}}};export{w as a};