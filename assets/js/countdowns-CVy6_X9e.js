import{d as t,M as e}from"./DataSyncService-BnTv72BN.js";import{E as a,M as s,p as i}from"./errors-dyfa6567.js";import{N as n,L as o,f as r,O as d,V as h,u as c,C as u}from"./index-DY0DW88M.js";import{u as l,a as p}from"./Logger-CErMjlBd.js";import{B as w}from"./BaseMetric-ClLQP9bU.js";import{c as g}from"./compareObjects-R6Hcs7xe.js";import{computed as v}from"./reactiveCustomization-B8WwDagp.js";import{P as f}from"./pinia-bvFMkYCE.js";class I{constructor({id:t=l(),utcDate:e=Date.now()+7*n,hasHours:a=!1,name:s="",pinned:i=!1,isTeam:o=!1,archived:r=!1,readOnly:d=!1,icon:m}){this.id=t,this.utcDate=e,this.hasHours=a,this.name=s,this.pinned=i,this.isTeam=o,this.archived=r,this.readOnly=d,this.icon=m??"calendar"}compare(t){return g((null==t?void 0:t.serialize())??new I({id:this.id,utcDate:this.utcDate}).serialize(),this.serialize())}validate(){if(""===this.name)throw new o({message:a.NameEmpty,input:"name"});if(this.name.length>s)throw new o({message:a.NameTooLong,input:"name"})}serialize(){return{...this}}get type(){return w.Countdown}get displayTooltip(){const t=this.utcDate?new Date(this.utcDate):new Date;return`${r.dayNamesShort[t.getDay()]} ${r.monthNamesShort[t.getMonth()]} ${t.getDate()}, ${t.getFullYear()}`}get displayValue(){const t=this.utcDate,e=d(this.currentTime,t),a=this.hasHours;let s,i="";return a&&e.minsTot<60?(s=0===e.minsTot?"Now":e.minsTot,i="m"):a&&e.hoursTot<24?(s=e.hoursTot,i="h"):(s=a||0!==e.nights?e.nights:"Today",i="d"),e.past&&(i+=" ago"),"Now"!==s&&"Today"!==s||(i=""),s+i}get currentTime(){return m.models.date.get("date").getTime()}get date(){return new Date(this.utcDate)}get dateTime(){return{date:this.date,hasHours:this.hasHours}}set dateTime(t){this.utcDate=t.date.getTime(),this.hasHours=t.hasHours}}const T=((a=i().countdownsService)=>{const s=t("countdowns",{plugins:[f.MockData],state:()=>({data:{},loading:!1,loaded:!1,activeItem:null,randomItems:[]}),getters:{items:t=>Object.values(t.data).filter((t=>!t.archived)).map((t=>new I(t))).sort(((t,e)=>+e.pinned-+t.pinned)),unpinnedItems:t=>Object.values(t.data).filter((t=>!t.archived&&!t.pinned)).map((t=>new I(t))),pinnedItems:t=>Object.values(t.data).filter((t=>!t.archived&&t.pinned)).map((t=>new I(t))).sort(((t,e)=>e.date.getTime()-t.date.getTime())),archivedItems:t=>Object.values(t.data).filter((t=>t.archived)).map((t=>new I(t))),getItemById(t){const e=t.data;return t=>{const a=e[t];if(a)return new I(a)}},showRandom(){return 0===this.pinnedItems.length||!!v["showRandomMetric-countdown"]}},actions:{clearActiveItem(){this.activeItem=null},setRandomItems(){!this.showRandom||this.unpinnedItems.length<=0?this.randomItems=[]:this.randomItems=[p(this.unpinnedItems)]},newItem(){this.activeItem||(this.activeItem=new I({}))},editItem(t){const e=this.data[t];if(!e)throw new o({message:`No countdown found with id: ${t}`});this.activeItem=new I(e)},refresh(t){!(null==t?void 0:t.force)&&(this.loading||this.loaded&&!(null==t?void 0:t.archived))||(this.loading=!0,a.get({success:t=>{this.data=Object.fromEntries(t.map((t=>[t.id,t]))),this.loaded=!0,this.loading=!1},failure:()=>{this.loading=!1},...(null==t?void 0:t.archived)&&{queryParams:{includeArchived:"true"},mode:e.Server}}))},async create(t){h.set(this.data,t.id,t),await a.create(t)},async update(t,e){const s=this.data[t];if(!s)throw new o({message:`No countdown found with id: ${t}`});h.set(this.data,t,{...s,...e}),await a.update(t,e)},async delete(t){h.delete(this.data,t),await a.delete(t)},async openItemOnTeamSite(t){let e=await a.getMetricServerId(t);e.toUpperCase().startsWith("T")&&(e=e.substring(1)),m.commandManager.execute("window.account.open.login",`/team/countdowns?id=${e}`)}}});return(async()=>{const t=s();await c((()=>t.loaded)).toBe(!0),u((()=>t.showRandom),(()=>{t.setRandomItems()}))})(),s})(),y=Object.freeze(Object.defineProperty({__proto__:null,default:T,useCountdownsStore:T},Symbol.toStringTag,{value:"Module"}));export{I as C,y as c,T as u};