import{D as s,F as e,G as o,A as a}from"./index-DY0DW88M.js";import{r as t}from"./onboarding-CbWaAKel.js";import{a as r}from"./authService-CEyg9tcu.js";import{a as n,e as i}from"./DataSyncService-BnTv72BN.js";var c="https://www.momentumdash.com/",l=(s=>(s.Google="google",s.Apple="apple",s))(l||{});const m=a=>new Promise(((t,r)=>{var i;n.post("user/sso-state-uuid",{name:(null==(i=localStorage.getObject("login:data"))?void 0:i.name)??"",source:"extension",sourceUri:location.origin}).then((({data:n})=>{const i=`${c}sso/${a}?state=${n.id}`;s()||e()?location.href=i:o(i,"momo-extension-sso-login","popup"),window.addEventListener("message",(s=>{s.data&&"ssoResponseCallback"in s.data&&("otp"in s.data.ssoResponseCallback||"convertUnregistered"===s.data.ssoResponseCallback.ssoOutcome?t(s.data.ssoResponseCallback):r("Could not login using sso. no OTL parameters received"))}))}),r)})),p=s=>{console.error(s),i.$emit("flashMessage",{message:"Oops, we weren't able to use that login. Please try again.",error:!0})},d=async(s,e)=>{a.capture("sso third party success",{feature:"third party sso",type:e,sso_outcome:s.ssoOutcome}),"convertUnregistered"===s.ssoOutcome?(await r.onSuccessfulUserLogin(),await t()):location.search=new URLSearchParams(s).toString()};export{l as S,p as a,m as i,d as o};