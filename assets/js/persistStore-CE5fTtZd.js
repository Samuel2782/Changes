import{r as a,u as e,w as t}from"./index-DY0DW88M.js";import{D as s,M as o}from"./DataSyncService-BnTv72BN.js";const i=(i,{mode:n=o.Sync,path:d="",responseProperty:r,syncAutomatically:c=!1,fixStateBeforeLoad:l}={})=>{const p=a(!1),u=a(!1),y=a(!1);let h=!1,w=null;const f=a=>{0!==a.length&&a.forEach((a=>b.add(a)))},v=async a=>{await j.update(P.$id,a,{appendIdToPath:!1})},$=async(a,t=!0)=>{t&&await e(p).toBe(!0),await e(y).toBe(!1),y.value=!0,f(Object.keys(a)),g.$state={...g.$state,...a},await v(a),y.value=!1},m=async(a=!1)=>{u.value||!a&&w?await w:await(w=(async()=>{try{h?u.value||(u.value=!0,await j.refresh({id:P.$id,appendIdToPath:!1,timestampKey:P.$id})):await k()}catch(a){console.error(a),u.value=!1}})())},b=new Set,j=new s("main",{mode:n,path:d}),P=i({loadedRef:p,loadingRef:u,updatingRef:y,updateAsync:$,refresh:m}),g=P(),k=()=>new Promise((a=>{g.$subscribe((a=>{p.value&&"payload"in a&&(f(Object.keys(a.payload)),v(a.payload))})),Object.keys(g.$state).forEach((a=>t((()=>g[a]),(async e=>{p.value&&(b.has(a)?b.delete(a):await j.update(P.$id,{[a]:e},{appendIdToPath:!1}))})))),u.value=!0,h=!0,j.get({id:P.$id,success:e=>{e&&(Object.keys(e).forEach((a=>{a in g.$state&&a in e&&g[a]!==e[a]&&f([a])})),g.$state={...g.$state,...e}),(async()=>{if(l&&!p.value){const a=await l(g.$state);Object.keys(a).length&&await $(a,!1)}p.value=!0,u.value=!1,a()})()},failure:a=>{u.value=!1,console.error(a)},appendIdToPath:!1,responseProperty:r,timestampKey:P.$id})}));return c&&m(),P};export{i as p};