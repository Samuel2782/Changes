import{d as t}from"./DataSyncService-BnTv72BN.js";import{a4 as e,a5 as o}from"./index-DY0DW88M.js";import{loadTodoAddin as a}from"./addin-DIVYf_6b.js";import"./Logger-CErMjlBd.js";import"./style-cpFB66wV.js";import"./modal-CXkRDJ21.js";import"./enums-C0TfsRui.js";import"./settingsViewState-ZEr74HQm.js";import"./ViewState-DzCxxm0h.js";import"./appZStack-B9FmF8l5.js";import"./tasksViewState-DGees08o.js";import"./handlebarLoader-xbtIzd6B.js";const r=e(""),s=t("todoStats",{state:()=>({loaded:!1}),getters:{todoCompletedSince(){return t=>{if(!this.loaded)return 0;if(r.value)return 0;const e=localStorage.getItem("todolist-1");if(!e)return 0;const o=e.split(",").reduce(((t,e)=>Object.assign(t,(t=>{const e=localStorage.getItem(t),o={};return e?(e.split(",").forEach((e=>{o[e]=localStorage.getObject(`${t}-${e}`)})),o):o})("todo-"+e))),{});return Object.values(o).filter((e=>e.done&&new Date(e.completedDate).getTime()>t)).length}},unsupportedMetrics:()=>r.value?["todoCompletedSince"]:[]},actions:{refresh(){(async()=>{await a();const t=m.views.todoPane,e=(await t.manager.getMomoLists()).getListOfType("done"),s=()=>t.todoList.model.activeProvider.get("provider_url");m.on("todo:providerChanged",(()=>{null==e||e.doFetchIfNeeded(!0),r.value=s()})),m.on("todo:loadingStateChange",(()=>o(r))),s()||null==e||e.doFetchIfNeeded(),r.value=s(),this.loaded=!0})()}}}),i=()=>s();export{i as default};