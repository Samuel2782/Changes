let e={};const r={bind(r,t){if(!Object.prototype.hasOwnProperty.call(t,"value")||t.value){r.dataset.resizeSensorId=Math.random().toString(36).substring(7);const o=new ResizeObserver((e=>{window.requestAnimationFrame((()=>{var r;const o=e[0];(null==(r=null==o?void 0:o.borderBoxSize)?void 0:r[0])&&t.value({width:o.borderBoxSize[0].inlineSize,height:o.borderBoxSize[0].blockSize})}))}));o.observe(r),e[r.dataset.resizeSensorId]=o}},unbind(r){e[r.dataset.resizeSensorId]&&(e[r.dataset.resizeSensorId].disconnect(),delete e[r.dataset.resizeSensorId])}};export{r as R};